#!/bin/bash

# Function to display help
show_help() {
    cat <<EOF
socat-master - Manage socat port forwarding services.

Usage:
  socat-master -c|--create LISTEN_PORT REDIR_IP REDIR_PORT  Create a new socat service.
  socat-master -d|--delete LISTEN_PORT                     Delete an existing socat service.
  socat-master -l|--list                                   List all socat services.
  socat-master -h|--help                                   Show this help message.

Options:
  -c, --create   Create a new socat service.
                 Arguments: LISTEN_PORT REDIR_IP REDIR_PORT
  -d, --delete   Delete an existing socat service.
                 Arguments: LISTEN_PORT
  -l, --list     List all active socat services.
  -h, --help     Show this help message.

Examples:
  socat-master --create 5022 127.0.0.1 22  # Create a service forwarding port 5022 to 127.0.0.1:22
  socat-master --delete 5022               # Delete the service listening on port 5022
  socat-master --list                      # List all active socat services
EOF
}

# Function to create a socat service
create_service() {
    if [ "$#" -ne 3 ]; then
        echo "Error: Incorrect number of arguments for --create."
        show_help
        exit 1
    fi

    LISTEN_PORT=$1
    REDIR_IP=$2
    REDIR_PORT=$3
    SERVICE_NAME="socatd-${LISTEN_PORT}.service"

    # Check if the service already exists
    if systemctl list-unit-files | grep -q "^${SERVICE_NAME}"; then
        echo "Error: Service ${SERVICE_NAME} already exists."
        exit 1
    fi

    # Check if the port is already in use
    if ss -tuln | grep -q ":${LISTEN_PORT} "; then
        echo "Error: Port ${LISTEN_PORT} is already in use."
        exit 1
    fi

    # Create the service file
    cat <<EOF | sudo tee /etc/systemd/system/${SERVICE_NAME} > /dev/null
[Unit]
Description=Socat service to forward port ${LISTEN_PORT} to ${REDIR_IP}:${REDIR_PORT}
After=network.target

[Service]
Type=simple
StandardOutput=syslog
StandardError=syslog
SyslogIdentifier=socatd-${LISTEN_PORT}

ExecStart=/usr/bin/socat TCP-LISTEN:${LISTEN_PORT},fork,reuseaddr TCP:${REDIR_IP}:${REDIR_PORT}
Restart=always

[Install]
WantedBy=multi-user.target
EOF

    # Reload systemd and start the service
    sudo systemctl daemon-reload
    sudo systemctl enable ${SERVICE_NAME}
    sudo systemctl start ${SERVICE_NAME}

    echo "Service ${SERVICE_NAME} created and started successfully."
}

# Function to delete a socat service
delete_service() {
    if [ "$#" -ne 1 ]; then
        echo "Error: Incorrect number of arguments for --delete."
        show_help
        exit 1
    fi

    LISTEN_PORT=$1
    SERVICE_NAME="socatd-${LISTEN_PORT}.service"

    # Check if the service exists
    if ! systemctl list-unit-files | grep -q "^${SERVICE_NAME}"; then
        echo "Error: Service ${SERVICE_NAME} does not exist."
        exit 1
    fi

    # Stop and delete the service
    sudo systemctl stop ${SERVICE_NAME}
    sudo systemctl disable ${SERVICE_NAME}
    sudo rm /etc/systemd/system/${SERVICE_NAME}
    sudo systemctl daemon-reload

    echo "Service ${SERVICE_NAME} deleted successfully."
}

# Function to list all socat services
list_services() {
    echo -e "LISTEN_PORT\tREDIR_IP\tREDIR_PORT"
    for service_file in /etc/systemd/system/socatd-*.service; do
        if [ -f "$service_file" ]; then
            LISTEN_PORT=$(basename $service_file | sed 's/socatd-\(.*\).service/\1/')
            REDIR_IP=$(grep -oP 'TCP:\K[^:]+' $service_file)
            REDIR_PORT=$(grep -oP 'TCP:[^:]+:\K[0-9]+' $service_file)
            echo -e "${LISTEN_PORT}\t${REDIR_IP}\t${REDIR_PORT}"
        fi
    done
}

# Main script logic
if [ "$#" -eq 0 ]; then
    show_help
    exit 1
fi

case $1 in
    -c|--create)
        shift
        create_service "$@"
        ;;
    -d|--delete)
        shift
        delete_service "$@"
        ;;
    -l|--list)
        list_services
        ;;
    -h|--help)
        show_help
        ;;
    *)
        echo "Error: Invalid option or arguments."
        show_help
        exit 1
        ;;
esac